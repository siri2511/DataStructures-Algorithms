package com.dsa.datastrcutures.circulardoublylinkedlist;

public class CircularDoubleList {
	Node head;
	Node tail;
	
	//insert at Start
	public void insertAtStart(int data) {
		Node node = new Node();
		node.data=data;
		if(head==null) {
			node.next=node.prev=node;
			head=node;
		}
		else {
			node.next=head;
			node.prev=tail;
			head.prev=node;
			tail.next=node;
			head=node;
		}
	}
	
	//insert at end
	public void insert(int data) {
		Node node = new Node();
		node.data = data;
		if(head==null) {
			node.next=node.prev=node;
			head=node;
		}
		else {
			node.next=head;
			node.prev=tail;
			
		}
	}
	
	public void show() {
		if(head==null) {
			System.out.println("Invalid operation");
		}
		else {
			Node curr = head;
			do {
				System.out.print(curr.data+" ");
				curr=curr.next;
			}while(curr!=head);
			System.out.println();
		}
	}

}
